My vague and not accurate summary of each learning outcome:

LO 1: use agile to plan and design a full stack web application

LO 2: data model

LO 3: auth, etc

LO 4: test the code

LO 5: use github

LO 6: full stack django on cloud platform

LO 7: have a custom and relevant Data model

LO 8: AI

~~

notes re the readme:

Assessment/Performance Criteria for Learning Outcomes:

1.3 Agile Methodology

    Assessment Criteria:
    Use an Agile tool to plan and track all major functionality. Document and implement all user stories linking them to project goals 
    within an agile tool.

    Performance Criteria:
    Use of an Agile tool to plan and track project tasks and progress. Documentation of user stories clearly linked to project 
    goals and deliverables within the tool.

1.5 Documentation:

    Assessment Criteria:
    Document the UX design process, including wireframes, mockups, and diagrams. Ensure documentation demonstrates that the design process 
    has been followed through to implementation.	

    Performance Criteria:
    Concise documentation of the UX design process, including wireframes, mockups, diagrams, as well as reasoning for changes throughout 
    the development process. Well-organized README file detailing the UX process, design rationale, and final implementation.

4.3 Testing Documentation:

    Assessment Criteria:
    Document all testing procedures and results in the README file.

    Performance Criteria:
    Detailed documentation of all testing procedures, including manual and/or automated tests. Clear explanations of test cases, 
    expected outcomes, and actual results. Well-organised README file summarising the testing approach and results.

5.1 Version Control with Git & GitHub:

    Assessment Criteria:
    Use Git for version control and GitHub (or a similar repository hosting service) to document the development process, 
    including meaningful commit messages.

    Performance Criteria:
    Use of Git for version control with meaningful and descriptive commit messages. Regular commits reflecting 
    incremental development and progress. Comprehensive commit history documenting the development process.

6.2 Document Deployment Process:

    Assessment Criteria:
    Clearly document the deployment process in a README file.

    Performance Criteria:
    Clear and detailed documentation of the deployment process in the README file. Step-by-step instructions for setting up and 
    deploying the application.

8.1 Use AI tools to assist in code creation:

    Assessment Criteria:
    Demonstrates strategic use of AI for generating code aligned with project objectives.

    Performance Criteria:
    Brief reflection in README.md on key decisions where AI was used to generate code, focusing on the outcomes rather than 
    detailed prompts or manual interventions.

8.2 Use AI tools to assist in debugging code:

    Assessment Criteria:
    Efficient use of AI tools to identify and resolve code issues.

    Performance Criteria:
    Brief reflection in README.md summarizing AI’s role in identifying and resolving bugs, noting key interventions.


8.3 Use AI tools to optimize code for performance and user experience:

    Assessment Criteria:
    AI-driven optimisation for improved performance and user experience.

    Performance Criteria:
    Short reflection on how AI contributed to performance and UX improvements. Minimal documentation of AI use.

8.4 Use AI tools to create automated unit tests:

    Assessment Criteria:
    Use GitHub Copilot to generate Django unit tests for application features, ensuring code coverage for key functionalities.

    Performance Criteria:
    README.md notes Copilot's role in creating unit tests, with brief mention of adjustments made to improve test accuracy 
    or completeness. Demonstrates basic understanding of test logic generated by Copilot.

8.4 Reflect on AI’s role in the development process and its impact on workflow:

    Assessment Criteria:
    High-level reflection on how AI tools affected the development process, with focus on outcomes rather than detailed steps.

    Performance Criteria:
    README.md includes concise insights into how AI influenced workflow, focusing on efficiency and outcomes without 
    in-depth prompt documentation.